#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BlockchainIndexer
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	public partial class BlockchainIndexerDBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertblock(block instance);
    partial void Updateblock(block instance);
    partial void Deleteblock(block instance);
    partial void Inserttransaction(transaction instance);
    partial void Updatetransaction(transaction instance);
    partial void Deletetransaction(transaction instance);
    #endregion
		
		public BlockchainIndexerDBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BlockchainIndexerDBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BlockchainIndexerDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BlockchainIndexerDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<block> blocks
		{
			get
			{
				return this.GetTable<block>();
			}
		}
		
		public System.Data.Linq.Table<transaction> transactions
		{
			get
			{
				return this.GetTable<transaction>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class block : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _block_number;
		
		private string _hash;
		
		private string _parent_hash;
		
		private string _miner;
		
		private System.Nullable<decimal> _block_reward;
		
		private decimal _gas_limit;
		
		private decimal _gas_used;
		
		private EntitySet<transaction> _transactions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onblock_numberChanging(int value);
    partial void Onblock_numberChanged();
    partial void OnhashChanging(string value);
    partial void OnhashChanged();
    partial void Onparent_hashChanging(string value);
    partial void Onparent_hashChanged();
    partial void OnminerChanging(string value);
    partial void OnminerChanged();
    partial void Onblock_rewardChanging(System.Nullable<decimal> value);
    partial void Onblock_rewardChanged();
    partial void Ongas_limitChanging(decimal value);
    partial void Ongas_limitChanged();
    partial void Ongas_usedChanging(decimal value);
    partial void Ongas_usedChanged();
    #endregion
		
		public block()
		{
			this._transactions = new EntitySet<transaction>(new Action<transaction>(this.attach_transactions), new Action<transaction>(this.detach_transactions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_block_number", DbType="Int NOT NULL")]
		public int block_number
		{
			get
			{
				return this._block_number;
			}
			set
			{
				if ((this._block_number != value))
				{
					this.Onblock_numberChanging(value);
					this.SendPropertyChanging();
					this._block_number = value;
					this.SendPropertyChanged("block_number");
					this.Onblock_numberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hash", DbType="VarChar(66) NOT NULL", CanBeNull=false)]
		public string hash
		{
			get
			{
				return this._hash;
			}
			set
			{
				if ((this._hash != value))
				{
					this.OnhashChanging(value);
					this.SendPropertyChanging();
					this._hash = value;
					this.SendPropertyChanged("hash");
					this.OnhashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_parent_hash", DbType="VarChar(66) NOT NULL", CanBeNull=false)]
		public string parent_hash
		{
			get
			{
				return this._parent_hash;
			}
			set
			{
				if ((this._parent_hash != value))
				{
					this.Onparent_hashChanging(value);
					this.SendPropertyChanging();
					this._parent_hash = value;
					this.SendPropertyChanged("parent_hash");
					this.Onparent_hashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_miner", DbType="VarChar(42) NOT NULL", CanBeNull=false)]
		public string miner
		{
			get
			{
				return this._miner;
			}
			set
			{
				if ((this._miner != value))
				{
					this.OnminerChanging(value);
					this.SendPropertyChanging();
					this._miner = value;
					this.SendPropertyChanged("miner");
					this.OnminerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_block_reward", DbType="Decimal(38,2) NULL")]
		public System.Nullable<decimal> block_reward
		{
			get
			{
				return this._block_reward;
			}
			set
			{
				if ((this._block_reward != value))
				{
					this.Onblock_rewardChanging(value);
					this.SendPropertyChanging();
					this._block_reward = value;
					this.SendPropertyChanged("block_reward");
					this.Onblock_rewardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gas_limit", DbType="Decimal(38,2) NOT NULL")]
		public decimal gas_limit
		{
			get
			{
				return this._gas_limit;
			}
			set
			{
				if ((this._gas_limit != value))
				{
					this.Ongas_limitChanging(value);
					this.SendPropertyChanging();
					this._gas_limit = value;
					this.SendPropertyChanged("gas_limit");
					this.Ongas_limitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gas_used", DbType="Decimal(38,2) NOT NULL")]
		public decimal gas_used
		{
			get
			{
				return this._gas_used;
			}
			set
			{
				if ((this._gas_used != value))
				{
					this.Ongas_usedChanging(value);
					this.SendPropertyChanging();
					this._gas_used = value;
					this.SendPropertyChanged("gas_used");
					this.Ongas_usedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="block_transaction", Storage="_transactions", ThisKey="id", OtherKey="block_id")]
		public EntitySet<transaction> transactions
		{
			get
			{
				return this._transactions;
			}
			set
			{
				this._transactions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_transactions(transaction entity)
		{
			this.SendPropertyChanging();
			entity.block = this;
		}
		
		private void detach_transactions(transaction entity)
		{
			this.SendPropertyChanging();
			entity.block = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class transaction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _block_id;
		
		private string _hash;
		
		private string _from;
		
		private string _to;
		
		private decimal _value;
		
		private decimal _gas;
		
		private decimal _gas_price;
		
		private int _transaction_index;
		
		private EntityRef<block> _block;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onblock_idChanging(int value);
    partial void Onblock_idChanged();
    partial void OnhashChanging(string value);
    partial void OnhashChanged();
    partial void OnfromChanging(string value);
    partial void OnfromChanged();
    partial void OntoChanging(string value);
    partial void OntoChanged();
    partial void OnvalueChanging(decimal value);
    partial void OnvalueChanged();
    partial void OngasChanging(decimal value);
    partial void OngasChanged();
    partial void Ongas_priceChanging(decimal value);
    partial void Ongas_priceChanged();
    partial void Ontransaction_indexChanging(int value);
    partial void Ontransaction_indexChanged();
    #endregion
		
		public transaction()
		{
			this._block = default(EntityRef<block>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_block_id", DbType="Int NOT NULL")]
		public int block_id
		{
			get
			{
				return this._block_id;
			}
			set
			{
				if ((this._block_id != value))
				{
					if (this._block.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onblock_idChanging(value);
					this.SendPropertyChanging();
					this._block_id = value;
					this.SendPropertyChanged("block_id");
					this.Onblock_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hash", DbType="VarChar(66) NOT NULL", CanBeNull=false)]
		public string hash
		{
			get
			{
				return this._hash;
			}
			set
			{
				if ((this._hash != value))
				{
					this.OnhashChanging(value);
					this.SendPropertyChanging();
					this._hash = value;
					this.SendPropertyChanged("hash");
					this.OnhashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_from", DbType="VarChar(42) NOT NULL", CanBeNull=false)]
		public string from
		{
			get
			{
				return this._from;
			}
			set
			{
				if ((this._from != value))
				{
					this.OnfromChanging(value);
					this.SendPropertyChanging();
					this._from = value;
					this.SendPropertyChanged("from");
					this.OnfromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_to", DbType="VarChar(42) NOT NULL", CanBeNull=false)]
		public string to
		{
			get
			{
				return this._to;
			}
			set
			{
				if ((this._to != value))
				{
					this.OntoChanging(value);
					this.SendPropertyChanging();
					this._to = value;
					this.SendPropertyChanged("to");
					this.OntoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_value", DbType="Decimal(38,2) NOT NULL")]
		public decimal value
		{
			get
			{
				return this._value;
			}
			set
			{
				if ((this._value != value))
				{
					this.OnvalueChanging(value);
					this.SendPropertyChanging();
					this._value = value;
					this.SendPropertyChanged("value");
					this.OnvalueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gas", DbType="Decimal(38,2) NOT NULL")]
		public decimal gas
		{
			get
			{
				return this._gas;
			}
			set
			{
				if ((this._gas != value))
				{
					this.OngasChanging(value);
					this.SendPropertyChanging();
					this._gas = value;
					this.SendPropertyChanged("gas");
					this.OngasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gas_price", DbType="Decimal(38,2) NOT NULL")]
		public decimal gas_price
		{
			get
			{
				return this._gas_price;
			}
			set
			{
				if ((this._gas_price != value))
				{
					this.Ongas_priceChanging(value);
					this.SendPropertyChanging();
					this._gas_price = value;
					this.SendPropertyChanged("gas_price");
					this.Ongas_priceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_transaction_index", DbType="Int NOT NULL")]
		public int transaction_index
		{
			get
			{
				return this._transaction_index;
			}
			set
			{
				if ((this._transaction_index != value))
				{
					this.Ontransaction_indexChanging(value);
					this.SendPropertyChanging();
					this._transaction_index = value;
					this.SendPropertyChanged("transaction_index");
					this.Ontransaction_indexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="block_transaction", Storage="_block", ThisKey="block_id", OtherKey="id", IsForeignKey=true)]
		public block block
		{
			get
			{
				return this._block.Entity;
			}
			set
			{
				block previousValue = this._block.Entity;
				if (((previousValue != value) 
							|| (this._block.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._block.Entity = null;
						previousValue.transactions.Remove(this);
					}
					this._block.Entity = value;
					if ((value != null))
					{
						value.transactions.Add(this);
						this._block_id = value.id;
					}
					else
					{
						this._block_id = default(int);
					}
					this.SendPropertyChanged("block");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
